{"version":3,"file":"main.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;;;;;;;;ACrCD;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;UCtCD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA,oFAAoF,OAAO;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;AC9CwB;AACJ;AACa;AACL","sources":["webpack://webpack-example/./src/scripts/dropdownmenu.js","webpack://webpack-example/./src/scripts/tester.js","webpack://webpack-example/webpack/bootstrap","webpack://webpack-example/./src/scripts/app.js","webpack://webpack-example/./src/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n  const dropdownHeaders = document.querySelectorAll('.news-category.dropdown');\r\n\r\n  dropdownHeaders.forEach(dropdownHeader => {\r\n    dropdownHeader.addEventListener('click', function (event) {\r\n      // Prevents the event from affecting parent elements\r\n      event.stopPropagation();\r\n\r\n      // Toggle the 'expanded' class on the clicked dropdown\r\n      this.classList.toggle('expanded');\r\n\r\n      // Optional: Close other dropdowns when one is opened\r\n      dropdownHeaders.forEach(otherHeader => {\r\n        if (otherHeader !== this) {\r\n          otherHeader.classList.remove('expanded');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  // Optional: Clicking anywhere outside of the dropdowns will close them\r\n  document.addEventListener('click', function () {\r\n    dropdownHeaders.forEach(dropdownHeader => {\r\n      dropdownHeader.classList.remove('expanded');\r\n    });\r\n  });\r\n\r\n  // New: Ensure that elements inside the articles are clickable\r\n  document.querySelectorAll('.news-category.dropdown .articles *').forEach(element => {\r\n    element.addEventListener('click', function (event) {\r\n      // This allows interaction with the element\r\n      console.log('Element clicked:', this);\r\n\r\n      // Stop the event from closing the dropdown\r\n      event.stopPropagation();\r\n    });\r\n  });\r\n});\r\n","document.addEventListener('DOMContentLoaded', function() {\r\n    var articleContainers = document.querySelectorAll('.article-container');\r\n    var maxDragDistance = -110; // Maximum left drag distance\r\n    var startX, currentX;\r\n    var isDragging = false;\r\n\r\n    articleContainers.forEach(function(container) {\r\n        var article = container.querySelector('article');\r\n        var archiveButton = container.querySelector('.archive-button');\r\n\r\n        article.addEventListener('touchstart', function(e) {\r\n            startX = e.touches[0].clientX;\r\n            isDragging = true;\r\n        });\r\n\r\n        article.addEventListener('touchmove', function(e) {\r\n            if (isDragging) {\r\n                currentX = e.touches[0].clientX;\r\n                var distance = currentX - startX;\r\n                if (distance <= 0 && distance > maxDragDistance) {\r\n                    this.style.transform = `translateX(${distance}px)`;\r\n                    archiveButton.style.opacity = (Math.abs(distance) / Math.abs(maxDragDistance)).toString();\r\n                }\r\n            }\r\n        });\r\n\r\n        article.addEventListener('touchend', function(e) {\r\n            isDragging = false;\r\n            var totalDragDistance = currentX - startX;\r\n            if (totalDragDistance <= maxDragDistance) {\r\n                this.style.transform = `translateX(${maxDragDistance}px)`;\r\n                archiveButton.style.opacity = '1';\r\n            } else {\r\n                this.style.transform = '';\r\n                archiveButton.style.opacity = '1';\r\n            }\r\n        });\r\n    });\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Function to fetch data from the API and update headlines and descriptions\r\nasync function updateHeadlinesAndDescriptions() {\r\n  try {\r\n      const apiKey = \"F7Q16NruiZVUiGVH934NpdQgCBkkIz2s\";\r\n      const apiUrl = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${apiKey}`;\r\n      \r\n      // Fetch data from the API\r\n      const response = await fetch(apiUrl);\r\n      const data = await response.json();\r\n\r\n      // Check if data was fetched successfully\r\n      if (response.ok && data.results) {\r\n          // Loop through the articles and update headlines and descriptions\r\n          const articles = document.querySelectorAll('.news-category .headline');\r\n          const descriptions = document.querySelectorAll('.news-category .description');\r\n          \r\n          for (let i = 0; i < articles.length; i++) {\r\n              const article = articles[i];\r\n              const description = descriptions[i];\r\n              \r\n              // Update headline\r\n              article.textContent = data.results[i]?.title || \"No Title Available\";\r\n              \r\n              // Update description\r\n              description.textContent = data.results[i]?.abstract || \"No Description Available\";\r\n          }\r\n      } else {\r\n          console.error(\"Error fetching data from API\");\r\n      }\r\n  } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n  }\r\n}\r\n\r\n// Call the function to update headlines and descriptions when the page loads\r\nwindow.addEventListener('load', updateHeadlinesAndDescriptions);\r\n\r\n\r\nexport default (function () {\r\n  fetch('https://api.nytimes.com/svc/topstories/v2/home.json?api-key=F7Q16NruiZVUiGVH934NpdQgCBkkIz2s')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n\r\n      console.log(data);\r\n\r\n    });\r\n})()","import \"./scripts/app.js\"\r\nimport \"./style.scss\"\r\nimport \"./scripts/dropdownmenu.js\"\r\nimport \"./scripts/setting.js\"\r\nimport \"./scripts/tester.js\""],"names":[],"sourceRoot":""}